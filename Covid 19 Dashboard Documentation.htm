<html><style>body {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
h1, h2, h3, h4, h5, h6 {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
table, pre {
color: #000000;
background-color: #FFFFFF;
font-size: 16;
font-family: Serif;
font-weight: normal;
font-style: normal;
}

ul, #myUL {
  list-style-type: none;
}

#myUL {
  margin: 0;
  padding: 0;
}

.caret, .dropDownCaret {
  cursor: pointer;
}

.caret::before {
	content: "\25B6";
	color: black;
	display: inline - block;
	margin - right: 6px;
}

.dropDownCaret::before {
	content: "\25BC";
	color: black;
	display: inline - block;
	margin - right: 6px;
	float: right;
}


.nested {
  display: none;
}

.active {
  display: block;
}
</style><body><br></br><h1><div>Power BI Documentation</div></h1><br></br><hr></hr><h2><div>Generated by <a href="http://radacad.com/power-bi-helper">Power BI Helper</a> (Copyright &copy; <a href="http://radacad.com">RADACAD</a>).</div><br></br><div>Date: 4/24/2023 1:52:38 AM</div><br></br></h2><h1><div>------------------******   Visualization    ******---------------------</div></h1><br></br><h2><div>File: Power BI Project 2.pbix</div></h2><br></br><h3><div>Path: D:\PP\Dataproanalytic\Learning Content\My Past Power BI Training Project\Power BI Project 2.pbix</div></h2><br></br><hr></hr><br></br><h3><div>List of Pages:</div></h3><br></br><table border='1px' cellpadding='1'><tr ><td >DisplayName</td><td >Name</td><td >Ordinal</td><td >DisplayOption</td><td >Width</td><td >Height</td><td >PageIndex</td></tr><tr ><td >Homepage</td><td >ReportSectionbefbcb05628b75997264</td><td >0</td><td >1</td><td >1280</td><td >720</td><td >0</td></tr><tr ><td >Confirmed</td><td >ReportSection48b805e1cd7fef3b9923</td><td >1</td><td >1</td><td >1280</td><td >720</td><td >1</td></tr><tr ><td >Death</td><td >ReportSection64038186d9d4785adb1e</td><td >2</td><td >1</td><td >1280</td><td >720</td><td >2</td></tr><tr ><td >Recovered</td><td >ReportSection</td><td >3</td><td >1</td><td >1280</td><td >720</td><td >3</td></tr><tr ><td >Confirm by Country Tooltips</td><td >ReportSectiona1dd52869cb31a3dc8ce</td><td >4</td><td >3</td><td >320</td><td >240</td><td >4</td></tr><tr ><td >Death by Country Tooltips</td><td >ReportSection4d9991cb863ce86c6eb6</td><td >5</td><td >3</td><td >320</td><td >240</td><td >5</td></tr><tr ><td >Recovered by Country Tooltips</td><td >ReportSection37506cd7968b22647110</td><td >6</td><td >3</td><td >320</td><td >240</td><td >6</td></tr></table><hr></hr><br></br><h3><div>Visuals in Homepage:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >textbox</td><td ></td><td >130.251256281407</td><td >38.5929648241206</td><td >1000</td><td >997.386934673367</td><td >97.6884422110553</td><td >815f50bfdf4ddd43b209</td><td ></td><td >0</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >66.9538461538462</td><td >34.1333333333333</td><td >0</td><td >1062.07179487179</td><td >94.5230769230769</td><td >f2c03bca96d85dc876fa</td><td >1000</td><td >1</td><td >0</td></tr><tr ><td ></td><td ></td><td >66.6410256410256</td><td >320.911680911681</td><td >11000</td><td >698.643216080402</td><td >399.02918352768</td><td >a97322dbba020cb032db</td><td >11000</td><td >2</td><td >0</td></tr><tr ><td ></td><td ></td><td >0</td><td >0</td><td >20000</td><td >687.043956725699</td><td >399.02918352768</td><td >3097467a7d2ea1986ac9</td><td ></td><td >3</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >27.1328685205028</td><td >2000</td><td >485.109814323607</td><td >107.573318134162</td><td >d10a0504677e6bfe45ca</td><td ></td><td >4</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >158.745523497142</td><td >3000</td><td >485.109814323607</td><td >107.573318134162</td><td >3e833b895e02baaab533</td><td >1000</td><td >5</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >290.358178473781</td><td >4000</td><td >485.109814323607</td><td >107.573318134162</td><td >82a50515a8f8023cceea</td><td >2000</td><td >6</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >18.5687967205209</td><td >62.0392991686203</td><td >5000</td><td >420.119025801784</td><td >51.5912852276085</td><td >141dca067fe3ad28abd7</td><td >3000</td><td >7</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >18.5687967205209</td><td >195.957103376455</td><td >6000</td><td >420.119025801784</td><td >51.5912852276085</td><td >de00f508f9cf7ba12ef1</td><td >4000</td><td >8</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >18.5687967205209</td><td >328.777220664553</td><td >7000</td><td >420.119025801784</td><td >51.5912852276085</td><td >3b1530c5211058d7c3c4</td><td >5000</td><td >9</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >408.513527851459</td><td >3.86189242259369</td><td >8000</td><td >271.568652037618</td><td >130.624743448626</td><td >11aa77a5ec9ec552f87d</td><td >6000</td><td >10</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >408.513527851459</td><td >136.682009710692</td><td >9000</td><td >271.568652037618</td><td >133.917804207835</td><td >e8fab98be88edbd7c587</td><td >7000</td><td >11</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >413.155727031589</td><td >270.599813918527</td><td >10000</td><td >266.926452857487</td><td >128.429369609153</td><td >d6f474aa975f700cbe37</td><td >8000</td><td >12</td><td >0</td></tr><tr ><td >card</td><td ></td><td >413.155727031589</td><td >24.7179438975843</td><td >11000</td><td >263.44480347239</td><td >90.0103274183807</td><td >6d1bc1aa552e4a3664af</td><td >9000</td><td >13</td><td >0</td></tr><tr ><td >card</td><td ></td><td >413.155727031589</td><td >157.538061185683</td><td >12000</td><td >263.44480347239</td><td >90.0103274183807</td><td >4e3645563afed1fb7c35</td><td >10000</td><td >14</td><td >0</td></tr><tr ><td >card</td><td ></td><td >414.316276826622</td><td >290.358178473781</td><td >13000</td><td >263.44480347239</td><td >90.0103274183807</td><td >8d4579dfd4d85f7a6f85</td><td >11000</td><td >15</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >9.96893298400837</td><td >0</td><td >16000</td><td >677.07502374169</td><td >130.066476733143</td><td >d1c43e1d42f4dee7ea14</td><td >12000</td><td >16</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >0.244336592745307</td><td >143.473271524625</td><td >17000</td><td >683.15289648623</td><td >125.204178537512</td><td >5e4039922cd1706d8241</td><td >13000</td><td >17</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >9.96893298400837</td><td >274.755322806676</td><td >19000</td><td >677.07502374169</td><td >122.773029439696</td><td >875d247434b6a8ee6a76</td><td >14000</td><td >18</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >10</td><td >27.1328685205028</td><td >2000</td><td >485.109814323607</td><td >107.573318134162</td><td >88621d473794843100b8</td><td >1000</td><td >19</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >10</td><td >158.745523497142</td><td >3000</td><td >485.109814323607</td><td >107.573318134162</td><td >11546d67d3796e020437</td><td >2000</td><td >20</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >10</td><td >290.358178473781</td><td >4000</td><td >485.109814323607</td><td >107.573318134162</td><td >b2dfd24d2e800c552553</td><td >3000</td><td >21</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >28.5687967205209</td><td >62.0392991686203</td><td >5000</td><td >420.119025801784</td><td >51.5912852276085</td><td >2ae1393f109034203021</td><td >4000</td><td >22</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >28.5687967205209</td><td >195.957103376455</td><td >6000</td><td >420.119025801784</td><td >51.5912852276085</td><td >0a365ce13d04622a79e2</td><td >5000</td><td >23</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >28.5687967205209</td><td >328.777220664553</td><td >7000</td><td >420.119025801784</td><td >51.5912852276085</td><td >f710934f203733e2c29c</td><td >6000</td><td >24</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >418.513527851459</td><td >3.86189242259371</td><td >8000</td><td >271.568652037618</td><td >130.624743448626</td><td >3c0e23403c1880306986</td><td >7000</td><td >25</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >418.513527851459</td><td >136.682009710692</td><td >9000</td><td >271.568652037618</td><td >133.917804207835</td><td >890c88ae2068d803d97b</td><td >8000</td><td >26</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >423.155727031589</td><td >270.599813918527</td><td >10000</td><td >266.926452857487</td><td >128.429369609153</td><td >2c8cb5b68150c3520a43</td><td >9000</td><td >27</td><td >0</td></tr><tr ><td >card</td><td ></td><td >423.155727031589</td><td >24.7179438975843</td><td >11000</td><td >263.44480347239</td><td >90.0103274183807</td><td >40ec51aa0d0d58508910</td><td >10000</td><td >28</td><td >0</td></tr><tr ><td >card</td><td ></td><td >423.155727031589</td><td >157.538061185683</td><td >12000</td><td >263.44480347239</td><td >90.0103274183807</td><td >4938e33db73d0ae41850</td><td >11000</td><td >29</td><td >0</td></tr><tr ><td >card</td><td ></td><td >424.316276826622</td><td >290.358178473781</td><td >13000</td><td >263.44480347239</td><td >90.0103274183807</td><td >e54343ce4a5243d0097d</td><td >12000</td><td >30</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >18.6846291760309</td><td >3.04710145498444</td><td >16000</td><td >670.552763819095</td><td >132.663316582915</td><td >4d15a40b05b069188ee1</td><td >13000</td><td >31</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >10</td><td >143.350791567881</td><td >17000</td><td >680.201005025126</td><td >123.015075376884</td><td >80ab5bd0032271da5a01</td><td >14000</td><td >32</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >18.4422110552764</td><td >276.014108150795</td><td >19000</td><td >680.201005025126</td><td >123.015075376884</td><td >e7d50ad5cc61154b9441</td><td >15000</td><td >33</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >1169.72307692308</td><td >617.025641025641</td><td >2000</td><td >98.4615384615385</td><td >91.8974358974359</td><td >6f7750cf3c7ece9cd23a</td><td >2000</td><td >34</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >1186.78974358974</td><td >630.153846153846</td><td >3000</td><td >60.3897435897436</td><td >64.3282051282051</td><td >ef5bb27233fc8559d8c6</td><td >3000</td><td >35</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >0</td><td >0</td><td >4000</td><td >765.829145728643</td><td >147.13567839196</td><td >fc5e11d928431a3ead4f</td><td >4000</td><td >36</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >68.0721747388414</td><td >145.868945868946</td><td >5000</td><td >326.98955365622</td><td >132.497625830959</td><td >197f825a1b89003da393</td><td >5000</td><td >37</td><td >0</td></tr><tr ><td >card</td><td ></td><td >77.7967711301045</td><td >160.45584045584</td><td >6000</td><td >305.109211775878</td><td >98.4615384615385</td><td >09bd951b0d2e8bc82405</td><td >6000</td><td >38</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >429.097815764482</td><td >145.868945868946</td><td >7000</td><td >326.98955365622</td><td >132.497625830959</td><td >93d76580aa40b970cdcb</td><td >7000</td><td >39</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >790.123456790123</td><td >145.868945868946</td><td >8000</td><td >326.98955365622</td><td >132.497625830959</td><td >9374c003a856621a8460</td><td >8000</td><td >40</td><td >0</td></tr><tr ><td >card</td><td ></td><td >438.822412155746</td><td >159.240265906933</td><td >9000</td><td >305.109211775878</td><td >103.32383665717</td><td >992bc8e71b365ec3106e</td><td >9000</td><td >41</td><td >0</td></tr><tr ><td >card</td><td ></td><td >801.063627730294</td><td >159.240265906933</td><td >10000</td><td >305.109211775878</td><td >110.617283950617</td><td >28ce9c0da5010d898500</td><td >10000</td><td >42</td><td >0</td></tr></table><br></br><h3><div>Visuals in Confirmed:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shapeMap</td><td ></td><td >0</td><td >137.846153846154</td><td >0</td><td >833.641025641026</td><td >388.594871794872</td><td >92f4ce03a151a58544a5</td><td >2000</td><td >0</td><td >1</td></tr><tr ><td >scatterChart</td><td ></td><td >775.876923076923</td><td >136.533333333333</td><td >1000</td><td >504.123076923077</td><td >375.466666666667</td><td >7db381765963b804d4d2</td><td >3000</td><td >1</td><td >1</td></tr><tr ><td >areaChart</td><td ></td><td >0</td><td >512</td><td >2000</td><td >1280</td><td >207.425641025641</td><td >e677e63dbe1775b2ac19</td><td >4000</td><td >2</td><td >1</td></tr><tr ><td >BarChartF5983CEA542C47889C9DE852B430DE5F</td><td ></td><td >0</td><td >359.71282051282</td><td >3000</td><td >275.692307692308</td><td >300.635897435897</td><td >56b3f6badee231fff42a</td><td >5000</td><td >3</td><td >1</td></tr><tr ><td >shape</td><td ></td><td >65.6410256410256</td><td >114.215384615385</td><td >4000</td><td >168.041025641026</td><td >24</td><td >930ac211d550f496e059</td><td >6000</td><td >4</td><td >1</td></tr><tr ><td >shape</td><td ></td><td >316.389743589744</td><td >114.215384615385</td><td >5000</td><td >168.041025641026</td><td >23.6307692307692</td><td >75517fa66072d99adadb</td><td >7000</td><td >5</td><td >1</td></tr><tr ><td >shape</td><td ></td><td >565.825641025641</td><td >114.215384615385</td><td >6000</td><td >168.041025641026</td><td >24</td><td >4bf1e4cc06ab80f3843f</td><td >8000</td><td >6</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >1.31282051282051</td><td >7000</td><td >468.676923076923</td><td >49.8871794871795</td><td >4c7bd2f7a5f754d01c32</td><td >9000</td><td >7</td><td >1</td></tr><tr ><td >card</td><td ></td><td >321.641025641026</td><td >70.8923076923077</td><td >8000</td><td >156.225641025641</td><td >48.574358974359</td><td >109214d785818c85d41f</td><td >10000</td><td >8</td><td >1</td></tr><tr ><td >card</td><td ></td><td >572.389743589744</td><td >65.6410256410256</td><td >9000</td><td >156.225641025641</td><td >48.574358974359</td><td >3b7ca58df619bfb007e3</td><td >11000</td><td >9</td><td >1</td></tr><tr ><td >card</td><td ></td><td >70.8923076923077</td><td >65.6410256410256</td><td >10000</td><td >156.225641025641</td><td >48.574358974359</td><td >86125bd7d0055036d801</td><td >12000</td><td >10</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >358.4</td><td >110.276923076923</td><td >11000</td><td >129.969230769231</td><td >42.0102564102564</td><td >b2c2f65604bd0148d0ec</td><td >13000</td><td >11</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >627.528205128205</td><td >110.276923076923</td><td >12000</td><td >129.969230769231</td><td >42.0102564102564</td><td >a4806da43315c3777368</td><td >14000</td><td >12</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >105.025641025641</td><td >110.276923076923</td><td >13000</td><td >129.969230769231</td><td >42.0102564102564</td><td >02fbcf3fffaa5e2bef22</td><td >15000</td><td >13</td><td >1</td></tr><tr ><td >actionButton</td><td >'ButtonDeaths'</td><td >557.948717948718</td><td >51.2</td><td >14000</td><td >199.548717948718</td><td >102.4</td><td >c741bfdd71f7d6b4d057</td><td ></td><td >14</td><td >1</td></tr><tr ><td ></td><td ></td><td >873.025641025641</td><td >1.31282051282051</td><td >15000</td><td >203.487179487179</td><td >56.4512820512821</td><td >9caa433429659bbc2ad0</td><td >16000</td><td >15</td><td >1</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >e7dba3414f1713c9caba</td><td >17000</td><td >16</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >b4cfb61892a331c8b0e5</td><td >18000</td><td >17</td><td >1</td></tr><tr ><td ></td><td ></td><td >1076.51282051282</td><td >0</td><td >16000</td><td >203.487179487179</td><td >56.4512820512821</td><td >1122850a93699219b88f</td><td >1000</td><td >18</td><td >1</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >4e3df238727d373bd28c</td><td ></td><td >19</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >def95e48c290aff44448</td><td >1000</td><td >20</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >817.88717948718</td><td >76.1435897435897</td><td >17000</td><td >462.112820512821</td><td >98.4615384615385</td><td >d0a3202bebc35d126505</td><td >19000</td><td >21</td><td >1</td></tr><tr ><td ></td><td ></td><td >669.538461538462</td><td >0</td><td >18000</td><td >203.487179487179</td><td >56.4512820512821</td><td >bd0c41dad6dc10e390c6</td><td >17000</td><td >22</td><td >1</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >95fc53dc0a3ddf50ab36</td><td ></td><td >23</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >e6c7ec3d1218a4c5da7b</td><td >1000</td><td >24</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >194.297435897436</td><td >512</td><td >19000</td><td >743.05641025641</td><td >103.712820512821</td><td >835e74dc6967349ed53d</td><td >20000</td><td >25</td><td >1</td></tr><tr ><td >actionButton</td><td >'ButtonRecovered'</td><td >300.635897435897</td><td >61.7025641025641</td><td >20000</td><td >200.861538461538</td><td >103.712820512821</td><td >b37bfd72a30f688e327c</td><td >18000</td><td >26</td><td >1</td></tr><tr ><td >actionButton</td><td ></td><td >488.369230769231</td><td >10.5025641025641</td><td >21000</td><td >45.9487179487179</td><td >34.1333333333333</td><td >d7ad3234627cf2eaba24</td><td >21000</td><td >27</td><td >1</td></tr></table><br></br><h3><div>Visuals in Death:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shapeMap</td><td ></td><td >0</td><td >145.723076923077</td><td >0</td><td >833.641025641026</td><td >388.594871794872</td><td >dd520b89d150ca9f454f</td><td >2000</td><td >0</td><td >2</td></tr><tr ><td >scatterChart</td><td ></td><td >775.876923076923</td><td >136.533333333333</td><td >1000</td><td >504.123076923077</td><td >375.466666666667</td><td >a8e34bd32ccc8a75c6da</td><td >3000</td><td >1</td><td >2</td></tr><tr ><td >areaChart</td><td ></td><td >0</td><td >512</td><td >2000</td><td >1280</td><td >207.425641025641</td><td >dac796417df223f6ee5a</td><td >4000</td><td >2</td><td >2</td></tr><tr ><td >BarChartF5983CEA542C47889C9DE852B430DE5F</td><td ></td><td >0</td><td >359.71282051282</td><td >3000</td><td >275.692307692308</td><td >300.635897435897</td><td >e6444ff771c9df733ca9</td><td >5000</td><td >3</td><td >2</td></tr><tr ><td >shape</td><td ></td><td >65.6410256410256</td><td >114.215384615385</td><td >4000</td><td >168.041025641026</td><td >24</td><td >51b6529ae98171f74f5e</td><td >6000</td><td >4</td><td >2</td></tr><tr ><td >shape</td><td ></td><td >316.389743589744</td><td >114.215384615385</td><td >5000</td><td >168.041025641026</td><td >23.6307692307692</td><td >5197ea67df1ff6e94612</td><td >7000</td><td >5</td><td >2</td></tr><tr ><td >shape</td><td ></td><td >565.825641025641</td><td >114.215384615385</td><td >6000</td><td >168.041025641026</td><td >24</td><td >f173eca150c756d44da6</td><td >8000</td><td >6</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >1.31282051282051</td><td >7000</td><td >468.676923076923</td><td >49.8871794871795</td><td >8cc5dd0837b86e2c3965</td><td >9000</td><td >7</td><td >2</td></tr><tr ><td >card</td><td ></td><td >321.641025641026</td><td >70.8923076923077</td><td >8000</td><td >156.225641025641</td><td >48.574358974359</td><td >9d65099326f8fe731ba2</td><td >10000</td><td >8</td><td >2</td></tr><tr ><td >card</td><td ></td><td >572.389743589744</td><td >65.6410256410256</td><td >9000</td><td >156.225641025641</td><td >48.574358974359</td><td >f7442f0cd8717cf51bce</td><td >11000</td><td >9</td><td >2</td></tr><tr ><td >card</td><td ></td><td >70.8923076923077</td><td >65.6410256410256</td><td >10000</td><td >156.225641025641</td><td >48.574358974359</td><td >865ed8cc3381c31f4db2</td><td >12000</td><td >10</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >358.4</td><td >110.276923076923</td><td >11000</td><td >129.969230769231</td><td >42.0102564102564</td><td >eef8e913633f61bad1de</td><td >13000</td><td >11</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >627.528205128205</td><td >110.276923076923</td><td >12000</td><td >129.969230769231</td><td >42.0102564102564</td><td >a980bc3a357262e26738</td><td >14000</td><td >12</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >105.025641025641</td><td >110.276923076923</td><td >13000</td><td >129.969230769231</td><td >42.0102564102564</td><td >7b1ace6b3ae449c6aff4</td><td >15000</td><td >13</td><td >2</td></tr><tr ><td >actionButton</td><td >'ButtonDeaths'</td><td >49.8871794871795</td><td >51.2</td><td >14000</td><td >199.548717948718</td><td >102.4</td><td >b26d3568be31283420e6</td><td ></td><td >14</td><td >2</td></tr><tr ><td ></td><td ></td><td >873.025641025641</td><td >1.31282051282051</td><td >15000</td><td >203.487179487179</td><td >56.4512820512821</td><td >57d9f58e6198598a4767</td><td >16000</td><td >15</td><td >2</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >c30e9f874cda961f5359</td><td >17000</td><td >16</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >997d608c8724bcbc6ad9</td><td >18000</td><td >17</td><td >2</td></tr><tr ><td ></td><td ></td><td >1076.51282051282</td><td >0</td><td >16000</td><td >203.487179487179</td><td >56.4512820512821</td><td >34cfd15a27491b8edbde</td><td >1000</td><td >18</td><td >2</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >c2b9150fd683b7d4aeee</td><td ></td><td >19</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >b7733d8c61572e4f348b</td><td >1000</td><td >20</td><td >2</td></tr><tr ><td ></td><td ></td><td >669.538461538462</td><td >0</td><td >17000</td><td >203.487179487179</td><td >56.4512820512821</td><td >7ea136568a0c30b9ee31</td><td >17000</td><td >21</td><td >2</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >d17885ee0c805e7d5d02</td><td ></td><td >22</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >a1c5cf4bb39716142713</td><td >1000</td><td >23</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >198.235897435897</td><td >481.805128205128</td><td >18000</td><td >657.723076923077</td><td >118.153846153846</td><td >c2fc86293abcaeced06c</td><td >19000</td><td >24</td><td >2</td></tr><tr ><td >textbox</td><td ></td><td >811.323076923077</td><td >78.7692307692308</td><td >19000</td><td >460.8</td><td >94.5230769230769</td><td >c53a61cfdc481b06d1c4</td><td >20000</td><td >25</td><td >2</td></tr><tr ><td >actionButton</td><td >'ButtonRecovered'</td><td >300.635897435897</td><td >61.7025641025641</td><td >20000</td><td >200.861538461538</td><td >103.712820512821</td><td >ca916e62974a8e552e21</td><td >18000</td><td >26</td><td >2</td></tr><tr ><td >actionButton</td><td ></td><td >488.369230769231</td><td >10.5025641025641</td><td >21000</td><td >45.9487179487179</td><td >34.1333333333333</td><td >5637c3dff0ace3c6494d</td><td >21000</td><td >27</td><td >2</td></tr></table><br></br><h3><div>Visuals in Recovered:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shapeMap</td><td ></td><td >0</td><td >137.846153846154</td><td >0</td><td >833.641025641026</td><td >388.594871794872</td><td >83d95cd8bac8a456f55e</td><td >2000</td><td >0</td><td >3</td></tr><tr ><td >scatterChart</td><td ></td><td >775.876923076923</td><td >136.533333333333</td><td >1000</td><td >504.123076923077</td><td >375.466666666667</td><td >8e8c8704efee6e8d5b02</td><td >3000</td><td >1</td><td >3</td></tr><tr ><td >areaChart</td><td ></td><td >0</td><td >512</td><td >2000</td><td >1280</td><td >207.425641025641</td><td >7dd8cfc223eed5162911</td><td >4000</td><td >2</td><td >3</td></tr><tr ><td >BarChartF5983CEA542C47889C9DE852B430DE5F</td><td ></td><td >0</td><td >359.71282051282</td><td >3000</td><td >275.692307692308</td><td >300.635897435897</td><td >6a9a4078a82fb2a3e476</td><td >5000</td><td >3</td><td >3</td></tr><tr ><td >shape</td><td ></td><td >65.6410256410256</td><td >114.215384615385</td><td >4000</td><td >168.041025641026</td><td >24</td><td >fe16487c132eaae36a5e</td><td >6000</td><td >4</td><td >3</td></tr><tr ><td >shape</td><td ></td><td >316.389743589744</td><td >114.215384615385</td><td >5000</td><td >168.041025641026</td><td >23.6307692307692</td><td >83c3101e78537967ce0c</td><td >7000</td><td >5</td><td >3</td></tr><tr ><td >shape</td><td ></td><td >565.825641025641</td><td >114.215384615385</td><td >6000</td><td >168.041025641026</td><td >24</td><td >13b90d9775065f28a8c0</td><td >8000</td><td >6</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >1.31282051282051</td><td >7000</td><td >468.676923076923</td><td >49.8871794871795</td><td >09ada82dc07ad01c67bf</td><td >9000</td><td >7</td><td >3</td></tr><tr ><td >card</td><td ></td><td >321.641025641026</td><td >70.8923076923077</td><td >8000</td><td >156.225641025641</td><td >48.574358974359</td><td >9fec7259731c197d50ac</td><td >10000</td><td >8</td><td >3</td></tr><tr ><td >card</td><td ></td><td >572.389743589744</td><td >65.6410256410256</td><td >9000</td><td >156.225641025641</td><td >48.574358974359</td><td >22b2d5ad82e36c39862a</td><td >11000</td><td >9</td><td >3</td></tr><tr ><td >card</td><td ></td><td >70.8923076923077</td><td >65.6410256410256</td><td >10000</td><td >156.225641025641</td><td >48.574358974359</td><td >3bf78eeb8bda96aeab70</td><td >12000</td><td >10</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >358.4</td><td >110.276923076923</td><td >11000</td><td >129.969230769231</td><td >42.0102564102564</td><td >5db04ab5dc6c0384e898</td><td >13000</td><td >11</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >627.528205128205</td><td >110.276923076923</td><td >12000</td><td >129.969230769231</td><td >42.0102564102564</td><td >276479929a4206a7e885</td><td >14000</td><td >12</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >105.025641025641</td><td >110.276923076923</td><td >13000</td><td >129.969230769231</td><td >42.0102564102564</td><td >b927634caf725872b793</td><td >15000</td><td >13</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >811.323076923077</td><td >70.8923076923077</td><td >14000</td><td >468.676923076923</td><td >107.651282051282</td><td >8fcfece747be38409363</td><td >16000</td><td >14</td><td >3</td></tr><tr ><td >actionButton</td><td >'ButtonDeaths'</td><td >557.948717948718</td><td >51.2</td><td >15000</td><td >199.548717948718</td><td >102.4</td><td >a7b5ed815d706fc8a7c5</td><td ></td><td >15</td><td >3</td></tr><tr ><td >actionButton</td><td >'ButtonDeaths'</td><td >49.8871794871795</td><td >51.2</td><td >16000</td><td >199.548717948718</td><td >102.4</td><td >e4d5caeef17dc355aaff</td><td >1000</td><td >16</td><td >3</td></tr><tr ><td ></td><td ></td><td >873.025641025641</td><td >0</td><td >17000</td><td >203.487179487179</td><td >56.4512820512821</td><td >98ab5a6a8aabc7827eea</td><td >17000</td><td >17</td><td >3</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >9dc4ec541fb67d25840d</td><td >17000</td><td >18</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >7a7956b801ca74364f3b</td><td >18000</td><td >19</td><td >3</td></tr><tr ><td ></td><td ></td><td >1076.51282051282</td><td >1.31282051282051</td><td >18000</td><td >203.487179487179</td><td >56.4512820512821</td><td >43b71223d7a321f699ed</td><td >18000</td><td >20</td><td >3</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >c95289a92e6f8075c6dc</td><td ></td><td >21</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >fabcffe7173112d1055a</td><td >1000</td><td >22</td><td >3</td></tr><tr ><td ></td><td ></td><td >657.723076923077</td><td >0</td><td >19000</td><td >203.487179487179</td><td >56.4512820512821</td><td >b44d655f0109b3a559a3</td><td >19000</td><td >23</td><td >3</td></tr><tr ><td >slicer</td><td ></td><td >8.5333333333333</td><td >19.6923076923077</td><td >17000</td><td >186.420512820513</td><td >36.7589743589744</td><td >b2b05075ce372d241af4</td><td ></td><td >24</td><td >3</td></tr><tr ><td >textbox</td><td ></td><td >0</td><td >0</td><td >18000</td><td >203.487179487179</td><td >38.0717948717949</td><td >1cdf0cb96b20a4b1520c</td><td >1000</td><td >25</td><td >3</td></tr><tr ><td >actionButton</td><td ></td><td >488.369230769231</td><td >10.5025641025641</td><td >20000</td><td >45.9487179487179</td><td >34.1333333333333</td><td >66347bc075fbffcaf078</td><td >20000</td><td >26</td><td >3</td></tr><tr ><td >actionButton</td><td ></td><td >0</td><td >0</td><td >21000</td><td >100</td><td >40</td><td >ea2423974b7f61ff9cdc</td><td >21000</td><td >27</td><td >3</td></tr></table><br></br><h3><div>Visuals in Confirm by Country Tooltips:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >BarChartF5983CEA542C47889C9DE852B430DE5F</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >240</td><td >526bec43872945827a76</td><td ></td><td >0</td><td >4</td></tr><tr ><td >multiRowCard</td><td ></td><td >199</td><td >174</td><td >1000</td><td >121</td><td >66</td><td >be227dae2460e80aa7e6</td><td ></td><td >1</td><td >4</td></tr></table><br></br><h3><div>Visuals in Death by Country Tooltips:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >BarChartF5983CEA542C47889C9DE852B430DE5F</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >240</td><td >845d4343a51c32c52c75</td><td ></td><td >0</td><td >5</td></tr><tr ><td >multiRowCard</td><td ></td><td >199</td><td >174</td><td >1000</td><td >121</td><td >66</td><td >b2e2550cd9a37730a881</td><td ></td><td >1</td><td >5</td></tr></table><br></br><h3><div>Visuals in Recovered by Country Tooltips:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >BarChartF5983CEA542C47889C9DE852B430DE5F</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >240</td><td >e79a9b608621d9305b8a</td><td ></td><td >0</td><td >6</td></tr><tr ><td >multiRowCard</td><td ></td><td >199</td><td >174</td><td >1000</td><td >121</td><td >66</td><td >465232c341a0c70b2da0</td><td ></td><td >1</td><td >6</td></tr></table><hr></hr><br></br><h3><div>List of all Columns/Fields/Measures/Expressions Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >Aggregation</td><td >Expression</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >13</td><td >0</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >14</td><td >0</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >15</td><td >0</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >28</td><td >0</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >29</td><td >0</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >30</td><td >0</td></tr><tr ><td >Total Confirmed by Total Tested </td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed by Total Tested (per 1m)</td><td >38</td><td >0</td></tr><tr ><td ></td><td >Total</td><td ></td><td >Covid19 #Total.% of Total Death by Total Confirmed</td><td >41</td><td >0</td></tr><tr ><td ></td><td >Total</td><td ></td><td >Covid19 #Total.% of Total Recovered by Total Confirmed</td><td >42</td><td >0</td></tr><tr ><td >Country Json</td><td >Dim Table</td><td ></td><td >Dim Table.Country Json</td><td >0</td><td >1</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >0</td><td >1</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >0</td><td >1</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >0</td><td >1</td></tr><tr ><td >Total Cases per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Cases per 1 Million Population</td><td >0</td><td >1</td></tr><tr ><td >Total Death per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Death per 1 Million Population</td><td >0</td><td >1</td></tr><tr ><td >Total Test per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Test per 1 Million Population</td><td >0</td><td >1</td></tr><tr ><td >Total Confirmed by Total Tested</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed by Total Tested</td><td >0</td><td >1</td></tr><tr ><td >ISO 2</td><td >Dim Table</td><td ></td><td >Dim Table.ISO 2</td><td >1</td><td >1</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >1</td><td >1</td></tr><tr ><td >Active Cases</td><td >Total</td><td ></td><td >Covid19 #Total.Active Cases</td><td >1</td><td >1</td></tr><tr ><td >Serious Critical</td><td >Total</td><td ></td><td >Covid19 #Total.Serious Critical</td><td >1</td><td >1</td></tr><tr ><td >ISO 2</td><td >Dim Table</td><td ></td><td >Dim Table.ISO 2</td><td >1</td><td >1</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >1</td><td >1</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >2</td><td >1</td></tr><tr ><td >Daily Confirmed</td><td >CV19 Data</td><td ></td><td >CV19 Data.Daily Confirmed</td><td >2</td><td >1</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >2</td><td >1</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >3</td><td >1</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >3</td><td >1</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >3</td><td >1</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >8</td><td >1</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >9</td><td >1</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >10</td><td >1</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >16</td><td >1</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >16</td><td >1</td></tr><tr ><td >Country</td><td >Dim Table</td><td ></td><td >Dim Table.Country</td><td >19</td><td >1</td></tr><tr ><td >Country</td><td >Dim Table</td><td ></td><td >Dim Table.Country</td><td >19</td><td >1</td></tr><tr ><td >Year</td><td >Dates</td><td ></td><td >Dates.Year</td><td >23</td><td >1</td></tr><tr ><td >Year</td><td >Dates</td><td ></td><td >Dates.Year</td><td >23</td><td >1</td></tr><tr ><td >Country Json</td><td >Dim Table</td><td ></td><td >Dim Table.Country Json</td><td >0</td><td >2</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >0</td><td >2</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >0</td><td >2</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >0</td><td >2</td></tr><tr ><td >Total Cases per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Cases per 1 Million Population</td><td >0</td><td >2</td></tr><tr ><td >Total Death per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Death per 1 Million Population</td><td >0</td><td >2</td></tr><tr ><td >Total Test per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Test per 1 Million Population</td><td >0</td><td >2</td></tr><tr ><td ></td><td >Total</td><td ></td><td >Covid19 #Total.% of Total Death by Total Confirmed</td><td >0</td><td >2</td></tr><tr ><td >ISO 2</td><td >Dim Table</td><td ></td><td >Dim Table.ISO 2</td><td >1</td><td >2</td></tr><tr ><td >Active Cases</td><td >Total</td><td ></td><td >Covid19 #Total.Active Cases</td><td >1</td><td >2</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >1</td><td >2</td></tr><tr ><td >Serious Critical</td><td >Total</td><td ></td><td >Covid19 #Total.Serious Critical</td><td >1</td><td >2</td></tr><tr ><td >ISO 2</td><td >Dim Table</td><td ></td><td >Dim Table.ISO 2</td><td >1</td><td >2</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >1</td><td >2</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >2</td><td >2</td></tr><tr ><td >Daily Deaths</td><td >CV19 Data</td><td ></td><td >CV19 Data.Daily Deaths</td><td >2</td><td >2</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >2</td><td >2</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >3</td><td >2</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >3</td><td >2</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >3</td><td >2</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >8</td><td >2</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >9</td><td >2</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >10</td><td >2</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >16</td><td >2</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >16</td><td >2</td></tr><tr ><td >Country</td><td >Dim Table</td><td ></td><td >Dim Table.Country</td><td >19</td><td >2</td></tr><tr ><td >Country</td><td >Dim Table</td><td ></td><td >Dim Table.Country</td><td >19</td><td >2</td></tr><tr ><td >Year</td><td >Dates</td><td ></td><td >Dates.Year</td><td >22</td><td >2</td></tr><tr ><td >Year</td><td >Dates</td><td ></td><td >Dates.Year</td><td >22</td><td >2</td></tr><tr ><td >Country Json</td><td >Dim Table</td><td ></td><td >Dim Table.Country Json</td><td >0</td><td >3</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >0</td><td >3</td></tr><tr ><td >Active Cases</td><td >Total</td><td ></td><td >Covid19 #Total.Active Cases</td><td >0</td><td >3</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >0</td><td >3</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >0</td><td >3</td></tr><tr ><td >Total Cases per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Cases per 1 Million Population</td><td >0</td><td >3</td></tr><tr ><td >Total Death per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Death per 1 Million Population</td><td >0</td><td >3</td></tr><tr ><td >Total Test per 1 Million Population</td><td >Test</td><td ></td><td >Covid19 #Test.Total Test per 1 Million Population</td><td >0</td><td >3</td></tr><tr ><td ></td><td >Total</td><td ></td><td >Covid19 #Total.% of Total Recovered by Total Confirmed</td><td >0</td><td >3</td></tr><tr ><td >ISO 2</td><td >Dim Table</td><td ></td><td >Dim Table.ISO 2</td><td >1</td><td >3</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >1</td><td >3</td></tr><tr ><td >Serious Critical</td><td >Total</td><td ></td><td >Covid19 #Total.Serious Critical</td><td >1</td><td >3</td></tr><tr ><td >Active Cases</td><td >Total</td><td ></td><td >Covid19 #Total.Active Cases</td><td >1</td><td >3</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >2</td><td >3</td></tr><tr ><td >Cumulative Confirmed</td><td >CV19 Data</td><td ></td><td >CV19 Data.Cumulative Confirmed</td><td >2</td><td >3</td></tr><tr ><td >Cumulative Recovered</td><td >CV19 Data</td><td ></td><td >CV19 Data.Cumulative Recovered</td><td >2</td><td >3</td></tr><tr ><td >Cumulative Total Deaths</td><td >CV19 Data</td><td ></td><td >CV19 Data.Cumulative Total Deaths</td><td >2</td><td >3</td></tr><tr ><td >Cumulative Active Cases</td><td >CV19 Data</td><td ></td><td >CV19 Data.Cumulative Active Cases</td><td >2</td><td >3</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >3</td><td >3</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >3</td><td >3</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >8</td><td >3</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >9</td><td >3</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >10</td><td >3</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >18</td><td >3</td></tr><tr ><td >Country</td><td >Dim Table</td><td ></td><td >Dim Table.Country</td><td >21</td><td >3</td></tr><tr ><td >Year</td><td >Dates</td><td ></td><td >Dates.Year</td><td >24</td><td >3</td></tr><tr ><td ></td><td ></td><td ></td><td >Dim Table.Country.</td><td >0</td><td >4</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >0</td><td >4</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >1</td><td >4</td></tr><tr ><td >Total Confirmed</td><td >Total</td><td ></td><td >Covid19 #Total.Total Confirmed</td><td >1</td><td >4</td></tr><tr ><td ></td><td ></td><td ></td><td >Dim Table.Country.</td><td >0</td><td >5</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >0</td><td >5</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >1</td><td >5</td></tr><tr ><td >Total Deaths</td><td >Total</td><td ></td><td >Covid19 #Total.Total Deaths</td><td >1</td><td >5</td></tr><tr ><td ></td><td ></td><td ></td><td >Dim Table.Country.</td><td >0</td><td >6</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >0</td><td >6</td></tr><tr ><td >Continent</td><td >Dim Table</td><td ></td><td >Dim Table.Continent</td><td >1</td><td >6</td></tr><tr ><td >Total Recovered</td><td >Total</td><td ></td><td >Covid19 #Total.Total Recovered</td><td >1</td><td >6</td></tr></table><hr></hr><br></br><h3><div>List of Tables Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td></tr><tr ><td >Covid19 #Total</td></tr><tr ><td >Dim Table</td></tr><tr ><td >Covid19 #Test</td></tr><tr ><td >Dates</td></tr><tr ><td >CV19 Data</td></tr></table><hr></hr><br></br><h3><div>List of Columns Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >State</td><td >Data Category</td><td >Data Type</td><td >Description</td><td >Display Folder</td><td >Error Message</td><td >Format String</td><td >Is Hidden</td><td >Modified Time</td><td >Structure Modified Time</td><td >Sort by Column</td><td >Summarize By</td><td >Type</td><td >Expression</td></tr><tr ><td >Column1</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Month</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Month Name</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Quarter</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Week of Month</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Week of Year</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Day</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Day Name</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Day of Week</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Country</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Country Json</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Continent</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Status</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Value</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Country</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Country Json</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Continent</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Status</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Value</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Country.</td><td >Dim Table</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Index</td><td >Dim Table</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Date</td><td >CV19 Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Country</td><td >CV19 Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Status</td><td >CV19 Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Value</td><td >CV19 Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Serious Critical</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Total Recovered</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Active Cases</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Total Deaths</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Total Confirmed</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Covariance Measure</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Total Confirmed by Total Tested (per 1m)</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >% of Total Death by Total Confirmed</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >% of Total Recovered by Total Confirmed</td><td >Covid19 #Total</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Total Cases per 1 Million Population</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Total Death per 1 Million Population</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Total Test per 1 Million Population</td><td >Covid19 #Test</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Daily Recovered</td><td >CV19 Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr></table><hr></hr><br></br><h3><div>List of Tables Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td></tr><tr ><td >Key Measure</td></tr></table><h1><div>------------------******   Model    ******---------------------</div></h1><br></br><h2><div>Model: Power BI Project 2</div></h2><br></br><hr></hr><br></br><h3><div>List of Tables:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Description</td><td >Storage Mode</td><td >Source</td><td >Is Hidden</td></tr><tr ><td >DateTableTemplate_7523064c-7eab-4f93-8258-f7e763b9b511</td><td ></td><td >Import</td><td ><pre>Calendar(Date(2015,1,1), Date(2015,1,1))</pre></td><td >True</td></tr><tr ><td >Key Measure</td><td ></td><td >Import</td><td ><pre>let
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}})
in
    #"Changed Type"</pre></td><td >False</td></tr><tr ><td >Dates</td><td ></td><td >Import</td><td ><pre>let
    Source = List.Dates(#date(2020,1,1),880,#duration(1,0,0,0)),
    #"Converted to Table" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Changed Type" = Table.TransformColumnTypes(#"Converted to Table",{{"Column1", type date}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"Column1", "Date"}}),
    #"Inserted Year" = Table.AddColumn(#"Renamed Columns", "Year", each Date.Year([Date]), Int64.Type),
    #"Inserted Month" = Table.AddColumn(#"Inserted Year", "Month", each Date.Month([Date]), Int64.Type),
    #"Inserted Month Name" = Table.AddColumn(#"Inserted Month", "Month Name", each Date.MonthName([Date]), type text),
    #"Inserted Quarter" = Table.AddColumn(#"Inserted Month Name", "Quarter", each Date.QuarterOfYear([Date]), Int64.Type),
    #"Inserted Week of Month" = Table.AddColumn(#"Inserted Quarter", "Week of Month", each Date.WeekOfMonth([Date]), Int64.Type),
    #"Inserted Week of Year" = Table.AddColumn(#"Inserted Week of Month", "Week of Year", each Date.WeekOfYear([Date]), Int64.Type),
    #"Inserted Day" = Table.AddColumn(#"Inserted Week of Year", "Day", each Date.Day([Date]), Int64.Type),
    #"Inserted Day Name" = Table.AddColumn(#"Inserted Day", "Day Name", each Date.DayOfWeekName([Date]), type text),
    #"Inserted Day of Week" = Table.AddColumn(#"Inserted Day Name", "Day of Week", each Date.DayOfWeek([Date]), Int64.Type)
in
    #"Inserted Day of Week"</pre></td><td >False</td></tr><tr ><td >LocalDateTable_81a9d869-391b-44fd-94d8-61c961620c7c</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))</pre></td><td >True</td></tr><tr ><td >Covid19 #Total</td><td ></td><td >Import</td><td ><pre>let
    Source = Csv.Document(File.Contents("D:\PP\My Power BI Project\worldometer_coronavirus_summary_data.csv"),[Delimiter=",", Columns=12, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Renamed Columns" = Table.RenameColumns(#"Promoted Headers",{{"country", "Country"}, {"continent", "Continent"}, {"total_confirmed", "Total Confirmed"}, {"total_deaths", "Total Deaths"}, {"total_recovered", "Total Recovered"}, {"active_cases", "Active Cases"}, {"serious_or_critical", "Serious Critical"}, {"total_cases_per_1m_population", "Total Cases per 1 million Population"}, {"total_deaths_per_1m_population", "Total Death per 1 Million Population"}, {"total_tests", "Total Test"}, {"total_tests_per_1m_population", "Total Test per 1 illion Population"}}),
    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"Total Confirmed", Int64.Type}, {"Total Deaths", Int64.Type}, {"Total Recovered", Int64.Type}, {"Active Cases", Int64.Type}, {"Serious Critical", Int64.Type}, {"Total Cases per 1 million Population", Int64.Type}, {"Total Death per 1 Million Population", Int64.Type}, {"Total Test", Int64.Type}, {"Total Test per 1 illion Population", Int64.Type}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type",{{"Total Test per 1 illion Population", "Total Test per 1 Million Population"}, {"Total Cases per 1 million Population", "Total Cases per 1 Million Population"}}),
    #"Replaced Value" = Table.ReplaceValue(#"Renamed Columns1",null,0,Replacer.ReplaceValue,{"Active Cases"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value",null,0,Replacer.ReplaceValue,{"Total Recovered"}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1",null,0,Replacer.ReplaceValue,{"Total Deaths"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2",null,0,Replacer.ReplaceValue,{"Serious Critical"}),
    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3",null,0,Replacer.ReplaceValue,{"Total Death per 1 Million Population"}),
    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value4",null,0,Replacer.ReplaceValue,{"Total Test"}),
    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value5",null,0,Replacer.ReplaceValue,{"Total Test per 1 Million Population"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Replaced Value6",{{"Total Test per 1 Million Population", Int64.Type}, {"Total Test", Int64.Type}, {"Total Death per 1 Million Population", Int64.Type}, {"Serious Critical", Int64.Type}, {"Active Cases", Int64.Type}, {"Total Recovered", Int64.Type}, {"Total Deaths", Int64.Type}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type1",{"Total Cases per 1 Million Population", "Total Death per 1 Million Population", "Total Test", "Total Test per 1 Million Population"}),
    #"Unpivoted Columns" = Table.UnpivotOtherColumns(#"Removed Columns", {"Country", "Country Json", "Continent"}, "Attribute", "Value"),
    #"Renamed Columns2" = Table.RenameColumns(#"Unpivoted Columns",{{"Attribute", "Status"}, {"Value", "Value"}})
in
    #"Renamed Columns2"</pre></td><td >False</td></tr><tr ><td >Covid19 #Test</td><td ></td><td >Import</td><td ><pre>let
    Source = Csv.Document(File.Contents("D:\PP\My Power BI Project\worldometer_coronavirus_summary_data.csv"),[Delimiter=",", Columns=12, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Renamed Columns" = Table.RenameColumns(#"Promoted Headers",{{"country", "Country"}, {"continent", "Continent"}, {"total_confirmed", "Total Confirmed"}, {"total_deaths", "Total Deaths"}, {"total_recovered", "Total Recovered"}, {"active_cases", "Active Cases"}, {"serious_or_critical", "Serious Critical"}, {"total_cases_per_1m_population", "Total Cases per 1 million Population"}, {"total_deaths_per_1m_population", "Total Death per 1 Million Population"}, {"total_tests", "Total Test"}, {"total_tests_per_1m_population", "Total Test per 1 illion Population"}}),
    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"Total Confirmed", Int64.Type}, {"Total Deaths", Int64.Type}, {"Total Recovered", Int64.Type}, {"Active Cases", Int64.Type}, {"Serious Critical", Int64.Type}, {"Total Cases per 1 million Population", Int64.Type}, {"Total Death per 1 Million Population", Int64.Type}, {"Total Test", Int64.Type}, {"Total Test per 1 illion Population", Int64.Type}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type",{{"Total Test per 1 illion Population", "Total Test per 1 Million Population"}, {"Total Cases per 1 million Population", "Total Cases per 1 Million Population"}}),
    #"Replaced Value" = Table.ReplaceValue(#"Renamed Columns1",null,0,Replacer.ReplaceValue,{"Active Cases"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value",null,0,Replacer.ReplaceValue,{"Total Recovered"}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1",null,0,Replacer.ReplaceValue,{"Total Deaths"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2",null,0,Replacer.ReplaceValue,{"Serious Critical"}),
    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3",null,0,Replacer.ReplaceValue,{"Total Death per 1 Million Population"}),
    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value4",null,0,Replacer.ReplaceValue,{"Total Test"}),
    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value5",null,0,Replacer.ReplaceValue,{"Total Test per 1 Million Population"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Replaced Value6",{{"Total Test per 1 Million Population", Int64.Type}, {"Total Test", Int64.Type}, {"Total Death per 1 Million Population", Int64.Type}, {"Serious Critical", Int64.Type}, {"Active Cases", Int64.Type}, {"Total Recovered", Int64.Type}, {"Total Deaths", Int64.Type}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type1",{"Total Confirmed", "Total Deaths", "Total Recovered", "Active Cases", "Serious Critical", "Total Test"}),
    #"Unpivoted Columns" = Table.UnpivotOtherColumns(#"Removed Columns", {"Country", "Country Json", "Continent"}, "Attribute", "Value"),
    #"Renamed Columns2" = Table.RenameColumns(#"Unpivoted Columns",{{"Attribute", "Status"}})
in
    #"Renamed Columns2"</pre></td><td >False</td></tr><tr ><td >Dim Table</td><td ></td><td >Import</td><td ><pre>let
    Source = Csv.Document(File.Contents("D:\PP\My Power BI Project\worldometer_coronavirus_daily_data.csv"),[Delimiter=",", Columns=7, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"date", type date}, {"country", type text}, {"cumulative_total_cases", Int64.Type}, {"daily_new_cases", Int64.Type}, {"active_cases", Int64.Type}, {"cumulative_total_deaths", Int64.Type}, {"daily_new_deaths", Int64.Type}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"country", "Country"}, {"cumulative_total_cases", "Cumulatives Total Case"}, {"daily_new_cases", "Daily New Cases"}, {"active_cases", "Active Cases"}, {"cumulative_total_deaths", "Cumulative Total Death"}, {"daily_new_deaths", "Daily New Death"}}),
    #"Replaced Value" = Table.ReplaceValue(#"Renamed Columns",null,0,Replacer.ReplaceValue,{"Daily New Death"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value",null,0,Replacer.ReplaceValue,{"Daily New Cases"}),
    #"Merged Queries" = Table.NestedJoin(#"Replaced Value1", {"Country"}, #"Covid19 Summary", {"Country"}, "Covid19 Summary", JoinKind.LeftOuter),
    #"Expanded Covid19 Summary" = Table.ExpandTableColumn(#"Merged Queries", "Covid19 Summary", {"Country Json", "Continent"}, {"Country Json", "Continent"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Expanded Covid19 Summary",{{"Daily New Cases", Int64.Type}, {"Daily New Death", Int64.Type}}),
    #"Added Custom" = Table.AddColumn(#"Changed Type1", "Cumulative Recovered", each [Cumulatives Total Case] - [Active Cases] - [Cumulative Total Death]),
    #"Changed Type2" = Table.TransformColumnTypes(#"Added Custom",{{"Cumulative Recovered", Int64.Type}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type2",{{"Cumulative Recovered", "Cumulative Total Recovered"}}),
    #"Unpivoted Columns" = Table.UnpivotOtherColumns(#"Renamed Columns1", {"date", "Country", "Country Json", "Continent"}, "Attribute", "Value"),
    #"Renamed Columns2" = Table.RenameColumns(#"Unpivoted Columns",{{"Attribute", "Status"}}),
    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns2",{"date", "Status", "Value"}),
    #"Removed Duplicates" = Table.Distinct(#"Removed Columns", {"Country"}),
    #"Added Index" = Table.AddIndexColumn(#"Removed Duplicates", "Index", 1, 1, Int64.Type),
    #"Renamed Columns3" = Table.RenameColumns(#"Added Index",{{"Country Json", "Country."}}),
    #"Merged Queries1" = Table.NestedJoin(#"Renamed Columns3", {"Country"}, #"ISO 2 Data", {"country"}, "Sheet1", JoinKind.LeftOuter),
    #"Expanded Sheet1" = Table.ExpandTableColumn(#"Merged Queries1", "Sheet1", {"cca2"}, {"cca2"}),
    #"Renamed Columns4" = Table.RenameColumns(#"Expanded Sheet1",{{"cca2", "ISO 2"}})
in
    #"Renamed Columns4"</pre></td><td >False</td></tr><tr ><td >CV19 Data</td><td ></td><td >Import</td><td ><pre>let
    Source = Csv.Document(File.Contents("D:\PP\My Power BI Project\worldometer_coronavirus_daily_data.csv"),[Delimiter=",", Columns=9, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"date", type date}, {"country", type text}, {"cumulative_total_cases", Int64.Type}, {"daily_new_cases", Int64.Type}, {"active_cases", Int64.Type}, {"cumulative_total_deaths", Int64.Type}, {"daily_new_deaths", Int64.Type}, {"Cumulative Recovered", Int64.Type}, {"Daily Recovered", Int64.Type}}),
    #"Replaced Value" = Table.ReplaceValue(#"Changed Type",null,0,Replacer.ReplaceValue,{"daily_new_cases"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value",null,0,Replacer.ReplaceValue,{"daily_new_deaths"}),
    #"Renamed Columns" = Table.RenameColumns(#"Replaced Value1",{{"date", "Date"}, {"country", "Country"}, {"cumulative_total_cases", "Cumulative Confirmed"}, {"daily_new_cases", "Daily Confirmed"}, {"active_cases", "Active Cases"}, {"cumulative_total_deaths", "Cumulative Total Deaths"}, {"daily_new_deaths", "Daily Deaths"}}),
    #"Unpivoted Other Columns" = Table.UnpivotOtherColumns(#"Renamed Columns", {"Date", "Country"}, "Attribute", "Value"),
    #"Renamed Columns1" = Table.RenameColumns(#"Unpivoted Other Columns",{{"Attribute", "Status"}}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Renamed Columns1",{{"Value", Int64.Type}})
in
    #"Changed Type1"</pre></td><td >False</td></tr></table><hr></hr><br></br><h3><div>List of Measures:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Measure Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
		<th>Dependency</th>
		<th>Reverse Dependency</th>
	</tr>
	<tr>
		<td>Serious Critical</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Total'[Value]),FILTER('Covid19 #Total','Covid19 #Total'[Status] ="Serious Critical"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Serious Critical</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Total</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Serious Critical</td>
	</tr>
	<tr>
		<td>Total Recovered</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Total'[Value]),FILTER('Covid19 #Total','Covid19 #Total'[Status] ="Total Recovered"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Recovered</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Total</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Recovered</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: % of Total Recovered by Total Confirmed</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Active Cases</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Total'[Value]),FILTER('Covid19 #Total','Covid19 #Total'[Status] ="Active Cases"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Active Cases</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Total</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Active Cases</td>
	</tr>
	<tr>
		<td>Total Deaths</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Total'[Value]),FILTER('Covid19 #Total','Covid19 #Total'[Status] ="Total Deaths"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Deaths</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Total</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Deaths</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: % of Total Death by Total Confirmed</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Total Confirmed</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Total'[Value]),FILTER('Covid19 #Total','Covid19 #Total'[Status] ="Total Confirmed"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Confirmed</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Total</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Confirmed</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Total Confirmed by Total Tested (per 1m)</li>
<li>Measure: % of Total Death by Total Confirmed</li>
<li>Measure: % of Total Recovered by Total Confirmed</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Covariance Measure</td>
		<td>Covid19 #Total</td>
		<td>From Wikipedia on Covariance: In probability theory and statistics, covariance is a measure of the joint variability of two random variables.[1] If the greater values of one variable mainly correspond with the greater values of the other variable, and the same holds for the lesser values, i.e., the variables tend to show similar behavior, the covariance is positive.[2] In the opposite case, when the greater values of one variable mainly correspond to the lesser values of the other, i.e., the variables tend to show opposite behavior, the covariance is negative. The sign of the covariance therefore shows the tendency in the linear relationship between the variables. The magnitude of the covariance is not easy to interpret because it is not normalized and hence depends on the magnitudes of the variables. The normalized version of the covariance, the correlation coefficient, however, shows by its magnitude the strength of the linear relation.</td>
		<td><pre>
VAR __AvgA = CALCULATE(AVERAGE(Choose Column),ALL(''))
	VAR __AvgB = CALCULATE(AVERAGE(Choose Column),ALL(''))
	VAR __Table = 
		SUMMARIZE(
		    '',
		    [Choose Colum],
		    "__Covariance",
		    ([Choose Colum]-AvgA)*(MAX(Choose Column)-AvgB)/CALCULATE(COUNTROWS(''),ALL('')))
RETURN
	SUMX(__Table,[__Covariance])</pre></td>
		<td>Measure: Covariance Measure</td>
		<td>Measure: Covariance Measure</td>
	</tr>
	<tr>
		<td>Total Confirmed by Total Tested (per 1m)</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>DIVIDE([Total Confirmed],[Total Test per 1 Million Population],0)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Confirmed by Total Tested (per 1m)</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Total Test per 1 Million Population (Table: Covid19 #Test)</span>
<ul class="nested">
<li>Table: Covid19 #Test   ...</li>
<li>Column: Status (Table: Covid19 #Test)</li>
<li>Column: Value (Table: Covid19 #Test)</li>
</ul></li>
<li><span class="caret">Measure: Total Confirmed (Table: Covid19 #Total)</span>
<ul class="nested">
<li>Table: Covid19 #Total   ...</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Confirmed by Total Tested (per 1m)</td>
	</tr>
	<tr>
		<td>% of Total Death by Total Confirmed</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>DIVIDE([Total Deaths],[Total Confirmed] ,0)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: % of Total Death by Total Confirmed</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Total Deaths (Table: Covid19 #Total)</span>
<ul class="nested">
<li>Table: Covid19 #Total   ...</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></li>
<li><span class="caret">Measure: Total Confirmed (Table: Covid19 #Total)</span>
<ul class="nested">
<li>Table: Covid19 #Total   ...</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: % of Total Death by Total Confirmed</td>
	</tr>
	<tr>
		<td>% of Total Recovered by Total Confirmed</td>
		<td>Covid19 #Total</td>
		<td></td>
		<td><pre>DIVIDE([Total Recovered],[Total Confirmed] ,0)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: % of Total Recovered by Total Confirmed</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Total Recovered (Table: Covid19 #Total)</span>
<ul class="nested">
<li>Table: Covid19 #Total   ...</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></li>
<li><span class="caret">Measure: Total Confirmed (Table: Covid19 #Total)</span>
<ul class="nested">
<li>Table: Covid19 #Total   ...</li>
<li>Column: Status (Table: Covid19 #Total)</li>
<li>Column: Value (Table: Covid19 #Total)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: % of Total Recovered by Total Confirmed</td>
	</tr>
	<tr>
		<td>Total Cases per 1 Million Population</td>
		<td>Covid19 #Test</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Test'[Value]),FILTER('Covid19 #Test','Covid19 #Test'[Status] = "Total Cases per 1 Million Population"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Cases per 1 Million Population</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Test</li>
<li>Column: Status (Table: Covid19 #Test)</li>
<li>Column: Value (Table: Covid19 #Test)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Cases per 1 Million Population</td>
	</tr>
	<tr>
		<td>Total Death per 1 Million Population</td>
		<td>Covid19 #Test</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Test'[Value]),FILTER('Covid19 #Test','Covid19 #Test'[Status] = "Total Death per 1 Million Population"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Death per 1 Million Population</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Test</li>
<li>Column: Status (Table: Covid19 #Test)</li>
<li>Column: Value (Table: Covid19 #Test)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Death per 1 Million Population</td>
	</tr>
	<tr>
		<td>Total Test per 1 Million Population</td>
		<td>Covid19 #Test</td>
		<td></td>
		<td><pre>
CALCULATE(SUM('Covid19 #Test'[Value]),FILTER('Covid19 #Test','Covid19 #Test'[Status] = "Total Test per 1 Million Population"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Test per 1 Million Population</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Covid19 #Test</li>
<li>Column: Status (Table: Covid19 #Test)</li>
<li>Column: Value (Table: Covid19 #Test)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Test per 1 Million Population</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Total Confirmed by Total Tested (per 1m)</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Daily Deaths</td>
		<td>CV19 Data</td>
		<td></td>
		<td><pre>CALCULATE(SUM('CV19 Data'[Value]),FILTER('CV19 Data','CV19 Data'[Status] = "Daily Deaths"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Daily Deaths</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: CV19 Data</li>
<li>Column: Status (Table: CV19 Data)</li>
<li>Column: Value (Table: CV19 Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Daily Deaths</td>
	</tr>
	<tr>
		<td>Daily Recovered</td>
		<td>CV19 Data</td>
		<td></td>
		<td><pre>CALCULATE(SUM('CV19 Data'[Value]),FILTER('CV19 Data','CV19 Data'[Status] = "Daily Recovered"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Daily Recovered</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: CV19 Data</li>
<li>Column: Status (Table: CV19 Data)</li>
<li>Column: Value (Table: CV19 Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Daily Recovered</td>
	</tr>
	<tr>
		<td>Daily Confirmed</td>
		<td>CV19 Data</td>
		<td></td>
		<td><pre>CALCULATE(SUM('CV19 Data'[Value]),FILTER('CV19 Data','CV19 Data'[Status] = "Daily Confirmed"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Daily Confirmed</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: CV19 Data</li>
<li>Column: Status (Table: CV19 Data)</li>
<li>Column: Value (Table: CV19 Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Daily Confirmed</td>
	</tr>
	<tr>
		<td>Cumulative Total Deaths</td>
		<td>CV19 Data</td>
		<td></td>
		<td><pre>CALCULATE(SUM('CV19 Data'[Value]),FILTER('CV19 Data','CV19 Data'[Status] = "Cumulative Total Deaths"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Cumulative Total Deaths</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: CV19 Data</li>
<li>Column: Status (Table: CV19 Data)</li>
<li>Column: Value (Table: CV19 Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Cumulative Total Deaths</td>
	</tr>
	<tr>
		<td>Cumulative Active Cases</td>
		<td>CV19 Data</td>
		<td></td>
		<td><pre>CALCULATE(SUM('CV19 Data'[Value]),FILTER('CV19 Data','CV19 Data'[Status] = "Active Cases"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Cumulative Active Cases</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: CV19 Data</li>
<li>Column: Status (Table: CV19 Data)</li>
<li>Column: Value (Table: CV19 Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Cumulative Active Cases</td>
	</tr>
	<tr>
		<td>Cumulative Recovered</td>
		<td>CV19 Data</td>
		<td></td>
		<td><pre>CALCULATE(SUM('CV19 Data'[Value]),FILTER('CV19 Data','CV19 Data'[Status] = "Cumulative Recovered"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Cumulative Recovered</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: CV19 Data</li>
<li>Column: Status (Table: CV19 Data)</li>
<li>Column: Value (Table: CV19 Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Cumulative Recovered</td>
	</tr>
	<tr>
		<td>Cumulative Confirmed</td>
		<td>CV19 Data</td>
		<td></td>
		<td><pre>CALCULATE(SUM('CV19 Data'[Value]),FILTER('CV19 Data','CV19 Data'[Status] = "Cumulative Confirmed"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Cumulative Confirmed</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: CV19 Data</li>
<li>Column: Status (Table: CV19 Data)</li>
<li>Column: Value (Table: CV19 Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Cumulative Confirmed</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Key Measure:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Column1</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Dates:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Date</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Year</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Month</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Month Name</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Quarter</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Week of Month</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Week of Year</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Day</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Day Name</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Day of Week</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Covid19 #Total:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Country</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Country Json</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Continent</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Status</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Value</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Covid19 #Test:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Country</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Country Json</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Continent</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Status</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Value</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Dim Table:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Country</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Country.</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Continent</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Index</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ISO 2</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table CV19 Data:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Date</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Country</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Status</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Value</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Roles:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Role Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>Relationships:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >CrossFilteringBehavior</td><td >FromCardinality</td><td >FromColumn</td><td >FromTable</td><td >IsActive</td><td >IsRemoved</td><td >JoinOnDateBehavior</td><td >RelyOnReferentialIntegrity</td><td >SecurityFilteringBehavior</td><td >State</td><td >ToCardinality</td><td >ToColumn</td><td >ToTable</td><td >Type</td></tr><tr ><td >0bc3b9c3-276b-44cc-a00e-d24ec6f101f0</td><td >OneDirection</td><td >Many</td><td >Date</td><td >Dates</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_81a9d869-391b-44fd-94d8-61c961620c7c</td><td >SingleColumn</td></tr><tr ><td >4604ba35-7e00-465c-b07b-6257fab38ca6</td><td >OneDirection</td><td >Many</td><td >Country</td><td >Covid19 #Total</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Country</td><td >Dim Table</td><td >SingleColumn</td></tr><tr ><td >1f94eef8-d834-4993-89a2-362e749db7d9</td><td >OneDirection</td><td >Many</td><td >Country</td><td >Covid19 #Test</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Country</td><td >Dim Table</td><td >SingleColumn</td></tr><tr ><td >c543f8ca-337a-49e7-a3c5-335ef2b806f8</td><td >OneDirection</td><td >Many</td><td >Country</td><td >CV19 Data</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Country</td><td >Dim Table</td><td >SingleColumn</td></tr><tr ><td >c6b71603-81a4-485b-851b-391f2dabb565</td><td >OneDirection</td><td >Many</td><td >Date</td><td >CV19 Data</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >Dates</td><td >SingleColumn</td></tr></table><hr></hr><br></br><h2><div>M (Power Query) Script:</div></h2><br></br><br></br><font face="verdana" size="2"<div>DateTableTemplate_7523064c-7eab-4f93-8258-f7e763b9b511-4e808591-fa7c-455c-8a36-5bbb23941c1c<br></br><br></br>Calendar(Date(2015,1,1), Date(2015,1,1))<br></br><br></br><br></br>----------------------<br></br>Key Measure-48b46010-02b4-49d5-8b70-993e8cc46f7b<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("i44FAA==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Column1 = _t]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Source,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type"</font><br></br><br></br><br></br>----------------------<br></br>Dates-546f17e2-6a27-424b-99bc-ab05606076d1<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">List.Dates</font>(#<font color="blue">date</font>(2020,1,1),880,#duration(1,0,0,0)),<br></br>    #<font color="red">"Converted to Table"</font> = <font color="purple">Table.FromList</font>(Source, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Converted to Table"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"Column1"</font>, <font color="red">"Date"</font>}}),<br></br>    #<font color="red">"Inserted Year"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Renamed Columns"</font>, <font color="red">"Year"</font>, each <font color="purple">Date.Year</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Month"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Year"</font>, <font color="red">"Month"</font>, each <font color="purple">Date.Month</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Month Name"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Month"</font>, <font color="red">"Month Name"</font>, each <font color="purple">Date.Month</font>Name([Date]), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Inserted Quarter"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Month Name"</font>, <font color="red">"Quarter"</font>, each <font color="purple">Date.QuarterOfYear</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Week of Month"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Quarter"</font>, <font color="red">"Week of Month"</font>, each <font color="purple">Date.WeekOfMonth</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Week of Year"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Week of Month"</font>, <font color="red">"Week of Year"</font>, each <font color="purple">Date.WeekOfYear</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Day"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Week of Year"</font>, <font color="red">"Day"</font>, each <font color="purple">Date.Day</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Day Name"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Day"</font>, <font color="red">"Day Name"</font>, each <font color="purple">Date.Day</font>OfWeekName([Date]), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Inserted Day of Week"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Day Name"</font>, <font color="red">"Day of Week"</font>, each <font color="purple">Date.Day</font>OfWeek([Date]), <font color="purple">Int64.Type</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Inserted Day of Week"</font><br></br><br></br><br></br>----------------------<br></br>LocalDateTable_81a9d869-391b-44fd-94d8-61c961620c7c-f77eddfa-65a4-4dba-95ad-13232818f8a1<br></br><br></br>Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>Covid19 #Total-df4ebeeb-d352-45f5-97be-b30af41f17b3<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_summary_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=12, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"continent"</font>, <font color="red">"Continent"</font>}, {<font color="red">"total_confirmed"</font>, <font color="red">"Total Confirmed"</font>}, {<font color="red">"total_deaths"</font>, <font color="red">"Total Deaths"</font>}, {<font color="red">"total_recovered"</font>, <font color="red">"Total Recovered"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"serious_or_critical"</font>, <font color="red">"Serious Critical"</font>}, {<font color="red">"total_cases_per_1m_population"</font>, <font color="red">"Total Cases per 1 million Population"</font>}, {<font color="red">"total_deaths_per_1m_population"</font>, <font color="red">"Total Death per 1 Million Population"</font>}, {<font color="red">"total_tests"</font>, <font color="red">"Total Test"</font>}, {<font color="red">"total_tests_per_1m_population"</font>, <font color="red">"Total Test per 1 illion Population"</font>}}),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns"</font>,{{<font color="red">"Total Confirmed"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test per 1 illion Population"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"Total Test per 1 illion Population"</font>, <font color="red">"Total Test per 1 Million Population"</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="red">"Total Cases per 1 Million Population"</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Active Cases"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Recovered"</font>}),<br></br>    #<font color="red">"Replaced Value2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Deaths"</font>}),<br></br>    #<font color="red">"Replaced Value3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value2"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Serious Critical"</font>}),<br></br>    #<font color="red">"Replaced Value4"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value3"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Death per 1 Million Population"</font>}),<br></br>    #<font color="red">"Replaced Value5"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value4"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test"</font>}),<br></br>    #<font color="red">"Replaced Value6"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value5"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test per 1 Million Population"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Replaced Value6"</font>,{{<font color="red">"Total Test per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type1"</font>,{<font color="red">"Total Cases per 1 Million Population"</font>, <font color="red">"Total Death per 1 Million Population"</font>, <font color="red">"Total Test"</font>, <font color="red">"Total Test per 1 Million Population"</font>}),<br></br>    #<font color="red">"Unpivoted Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Removed Columns"</font>, {<font color="red">"Country"</font>, <font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}, {<font color="red">"Value"</font>, <font color="red">"Value"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns2"</font><br></br><br></br><br></br>----------------------<br></br>Covid19 #Test-b015ecdc-97d1-4fa3-b4a1-4eb1356ea141<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_summary_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=12, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"continent"</font>, <font color="red">"Continent"</font>}, {<font color="red">"total_confirmed"</font>, <font color="red">"Total Confirmed"</font>}, {<font color="red">"total_deaths"</font>, <font color="red">"Total Deaths"</font>}, {<font color="red">"total_recovered"</font>, <font color="red">"Total Recovered"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"serious_or_critical"</font>, <font color="red">"Serious Critical"</font>}, {<font color="red">"total_cases_per_1m_population"</font>, <font color="red">"Total Cases per 1 million Population"</font>}, {<font color="red">"total_deaths_per_1m_population"</font>, <font color="red">"Total Death per 1 Million Population"</font>}, {<font color="red">"total_tests"</font>, <font color="red">"Total Test"</font>}, {<font color="red">"total_tests_per_1m_population"</font>, <font color="red">"Total Test per 1 illion Population"</font>}}),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns"</font>,{{<font color="red">"Total Confirmed"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test per 1 illion Population"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"Total Test per 1 illion Population"</font>, <font color="red">"Total Test per 1 Million Population"</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="red">"Total Cases per 1 Million Population"</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Active Cases"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Recovered"</font>}),<br></br>    #<font color="red">"Replaced Value2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Deaths"</font>}),<br></br>    #<font color="red">"Replaced Value3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value2"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Serious Critical"</font>}),<br></br>    #<font color="red">"Replaced Value4"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value3"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Death per 1 Million Population"</font>}),<br></br>    #<font color="red">"Replaced Value5"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value4"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test"</font>}),<br></br>    #<font color="red">"Replaced Value6"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value5"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test per 1 Million Population"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Replaced Value6"</font>,{{<font color="red">"Total Test per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type1"</font>,{<font color="red">"Total Confirmed"</font>, <font color="red">"Total Deaths"</font>, <font color="red">"Total Recovered"</font>, <font color="red">"Active Cases"</font>, <font color="red">"Serious Critical"</font>, <font color="red">"Total Test"</font>}),<br></br>    #<font color="red">"Unpivoted Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Removed Columns"</font>, {<font color="red">"Country"</font>, <font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns2"</font><br></br><br></br><br></br>----------------------<br></br>Dim Table-0704bb4b-10f6-48b7-a48d-d2bd2cd2de27<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_daily_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=7, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"<font color="blue">date</font>"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"country"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"active_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="red">"Cumulatives Total Case"</font>}, {<font color="red">"daily_new_cases"</font>, <font color="red">"Daily New Cases"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="red">"Cumulative Total Death"</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="red">"Daily New Death"</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Daily New Death"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Daily New Cases"</font>}),<br></br>    #<font color="red">"Merged Queries"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Replaced Value1"</font>, {<font color="red">"Country"</font>}, #<font color="red">"Covid19 Summary"</font>, {<font color="red">"Country"</font>}, <font color="red">"Covid19 Summary"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"Expanded Covid19 Summary"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Merged Queries"</font>, <font color="red">"Covid19 Summary"</font>, {<font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, {<font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Expanded Covid19 Summary"</font>,{{<font color="red">"Daily New Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Daily New Death"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Added Custom"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Changed Type1"</font>, <font color="red">"Cumulative Recovered"</font>, each [Cumulatives Total Case] - [Active Cases] - [Cumulative Total Death]),<br></br>    #<font color="red">"Changed Type2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Added Custom"</font>,{{<font color="red">"Cumulative Recovered"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type2"</font>,{{<font color="red">"Cumulative Recovered"</font>, <font color="red">"Cumulative Total Recovered"</font>}}),<br></br>    #<font color="red">"Unpivoted Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Renamed Columns1"</font>, {<font color="red">"<font color="blue">date</font>"</font>, <font color="red">"Country"</font>, <font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Renamed Columns2"</font>,{<font color="red">"<font color="blue">date</font>"</font>, <font color="red">"Status"</font>, <font color="red">"Value"</font>}),<br></br>    #<font color="red">"Removed Duplicates"</font> = <font color="purple">Table.Distinct</font>(#<font color="red">"Removed Columns"</font>, {<font color="red">"Country"</font>}),<br></br>    #<font color="red">"Added Index"</font> = <font color="purple">Table.AddIndexColumn</font>(#<font color="red">"Removed Duplicates"</font>, <font color="red">"Index"</font>, 1, 1, <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Renamed Columns3"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Added Index"</font>,{{<font color="red">"Country Json"</font>, <font color="red">"Country."</font>}}),<br></br>    #<font color="red">"Merged Queries1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Renamed Columns3"</font>, {<font color="red">"Country"</font>}, #<font color="red">"ISO 2 Data"</font>, {<font color="red">"country"</font>}, <font color="red">"Sheet1"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"Expanded Sheet1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Merged Queries1"</font>, <font color="red">"Sheet1"</font>, {<font color="red">"cca2"</font>}, {<font color="red">"cca2"</font>}),<br></br>    #<font color="red">"Renamed Columns4"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Expanded Sheet1"</font>,{{<font color="red">"cca2"</font>, <font color="red">"ISO 2"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns4"</font><br></br><br></br><br></br>----------------------<br></br>CV19 Data-0978b11d-b26c-4727-8f15-cc1191396137<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_daily_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=9, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"<font color="blue">date</font>"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"country"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"active_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Cumulative Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Daily Recovered"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Changed Type"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"daily_new_cases"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"daily_new_deaths"</font>}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Replaced Value1"</font>,{{<font color="red">"<font color="blue">date</font>"</font>, <font color="red">"Date"</font>}, {<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="red">"Cumulative Confirmed"</font>}, {<font color="red">"daily_new_cases"</font>, <font color="red">"Daily Confirmed"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="red">"Cumulative Total Deaths"</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="red">"Daily Deaths"</font>}}),<br></br>    #<font color="red">"Unpivoted Other Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Renamed Columns"</font>, {<font color="red">"Date"</font>, <font color="red">"Country"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Other Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns1"</font>,{{<font color="red">"Value"</font>, <font color="purple">Int64.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type1"</font><br></br><br></br><br></br>----------------------<br></br></font></div><br></br><hr></hr><br></br><h3><div>Partitions:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >QueryDefinition</td></tr><tr ><td >DateTableTemplate_7523064c-7eab-4f93-8258-f7e763b9b511-4e808591-fa7c-455c-8a36-5bbb23941c1c</td><td >Calendar(Date(2015,1,1), Date(2015,1,1))</td></tr><tr ><td >Key Measure-48b46010-02b4-49d5-8b70-993e8cc46f7b</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("i44FAA==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Column1 = _t]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Source,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type"</font></td></tr><tr ><td >Dates-546f17e2-6a27-424b-99bc-ab05606076d1</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">List.Dates</font>(#<font color="blue">date</font>(2020,1,1),880,#duration(1,0,0,0)),<br></br>    #<font color="red">"Converted to Table"</font> = <font color="purple">Table.FromList</font>(Source, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Converted to Table"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"Column1"</font>, <font color="red">"Date"</font>}}),<br></br>    #<font color="red">"Inserted Year"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Renamed Columns"</font>, <font color="red">"Year"</font>, each <font color="purple">Date.Year</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Month"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Year"</font>, <font color="red">"Month"</font>, each <font color="purple">Date.Month</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Month Name"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Month"</font>, <font color="red">"Month Name"</font>, each <font color="purple">Date.Month</font>Name([Date]), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Inserted Quarter"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Month Name"</font>, <font color="red">"Quarter"</font>, each <font color="purple">Date.QuarterOfYear</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Week of Month"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Quarter"</font>, <font color="red">"Week of Month"</font>, each <font color="purple">Date.WeekOfMonth</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Week of Year"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Week of Month"</font>, <font color="red">"Week of Year"</font>, each <font color="purple">Date.WeekOfYear</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Day"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Week of Year"</font>, <font color="red">"Day"</font>, each <font color="purple">Date.Day</font>([Date]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Inserted Day Name"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Day"</font>, <font color="red">"Day Name"</font>, each <font color="purple">Date.Day</font>OfWeekName([Date]), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Inserted Day of Week"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Inserted Day Name"</font>, <font color="red">"Day of Week"</font>, each <font color="purple">Date.Day</font>OfWeek([Date]), <font color="purple">Int64.Type</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Inserted Day of Week"</font></td></tr><tr ><td >LocalDateTable_81a9d869-391b-44fd-94d8-61c961620c7c-f77eddfa-65a4-4dba-95ad-13232818f8a1</td><td >Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))</td></tr><tr ><td >Covid19 #Total-df4ebeeb-d352-45f5-97be-b30af41f17b3</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_summary_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=12, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"continent"</font>, <font color="red">"Continent"</font>}, {<font color="red">"total_confirmed"</font>, <font color="red">"Total Confirmed"</font>}, {<font color="red">"total_deaths"</font>, <font color="red">"Total Deaths"</font>}, {<font color="red">"total_recovered"</font>, <font color="red">"Total Recovered"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"serious_or_critical"</font>, <font color="red">"Serious Critical"</font>}, {<font color="red">"total_cases_per_1m_population"</font>, <font color="red">"Total Cases per 1 million Population"</font>}, {<font color="red">"total_deaths_per_1m_population"</font>, <font color="red">"Total Death per 1 Million Population"</font>}, {<font color="red">"total_tests"</font>, <font color="red">"Total Test"</font>}, {<font color="red">"total_tests_per_1m_population"</font>, <font color="red">"Total Test per 1 illion Population"</font>}}),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns"</font>,{{<font color="red">"Total Confirmed"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test per 1 illion Population"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"Total Test per 1 illion Population"</font>, <font color="red">"Total Test per 1 Million Population"</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="red">"Total Cases per 1 Million Population"</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Active Cases"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Recovered"</font>}),<br></br>    #<font color="red">"Replaced Value2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Deaths"</font>}),<br></br>    #<font color="red">"Replaced Value3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value2"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Serious Critical"</font>}),<br></br>    #<font color="red">"Replaced Value4"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value3"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Death per 1 Million Population"</font>}),<br></br>    #<font color="red">"Replaced Value5"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value4"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test"</font>}),<br></br>    #<font color="red">"Replaced Value6"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value5"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test per 1 Million Population"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Replaced Value6"</font>,{{<font color="red">"Total Test per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type1"</font>,{<font color="red">"Total Cases per 1 Million Population"</font>, <font color="red">"Total Death per 1 Million Population"</font>, <font color="red">"Total Test"</font>, <font color="red">"Total Test per 1 Million Population"</font>}),<br></br>    #<font color="red">"Unpivoted Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Removed Columns"</font>, {<font color="red">"Country"</font>, <font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}, {<font color="red">"Value"</font>, <font color="red">"Value"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns2"</font></td></tr><tr ><td >Covid19 #Test-b015ecdc-97d1-4fa3-b4a1-4eb1356ea141</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_summary_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=12, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"continent"</font>, <font color="red">"Continent"</font>}, {<font color="red">"total_confirmed"</font>, <font color="red">"Total Confirmed"</font>}, {<font color="red">"total_deaths"</font>, <font color="red">"Total Deaths"</font>}, {<font color="red">"total_recovered"</font>, <font color="red">"Total Recovered"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"serious_or_critical"</font>, <font color="red">"Serious Critical"</font>}, {<font color="red">"total_cases_per_1m_population"</font>, <font color="red">"Total Cases per 1 million Population"</font>}, {<font color="red">"total_deaths_per_1m_population"</font>, <font color="red">"Total Death per 1 Million Population"</font>}, {<font color="red">"total_tests"</font>, <font color="red">"Total Test"</font>}, {<font color="red">"total_tests_per_1m_population"</font>, <font color="red">"Total Test per 1 illion Population"</font>}}),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns"</font>,{{<font color="red">"Total Confirmed"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test per 1 illion Population"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"Total Test per 1 illion Population"</font>, <font color="red">"Total Test per 1 Million Population"</font>}, {<font color="red">"Total Cases per 1 million Population"</font>, <font color="red">"Total Cases per 1 Million Population"</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Active Cases"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Recovered"</font>}),<br></br>    #<font color="red">"Replaced Value2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value1"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Deaths"</font>}),<br></br>    #<font color="red">"Replaced Value3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value2"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Serious Critical"</font>}),<br></br>    #<font color="red">"Replaced Value4"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value3"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Death per 1 Million Population"</font>}),<br></br>    #<font color="red">"Replaced Value5"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value4"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test"</font>}),<br></br>    #<font color="red">"Replaced Value6"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value5"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Total Test per 1 Million Population"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Replaced Value6"</font>,{{<font color="red">"Total Test per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Test"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Death per 1 Million Population"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Serious Critical"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Active Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Total Deaths"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type1"</font>,{<font color="red">"Total Confirmed"</font>, <font color="red">"Total Deaths"</font>, <font color="red">"Total Recovered"</font>, <font color="red">"Active Cases"</font>, <font color="red">"Serious Critical"</font>, <font color="red">"Total Test"</font>}),<br></br>    #<font color="red">"Unpivoted Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Removed Columns"</font>, {<font color="red">"Country"</font>, <font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns2"</font></td></tr><tr ><td >Dim Table-0704bb4b-10f6-48b7-a48d-d2bd2cd2de27</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_daily_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=7, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"<font color="blue">date</font>"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"country"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"active_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="red">"Cumulatives Total Case"</font>}, {<font color="red">"daily_new_cases"</font>, <font color="red">"Daily New Cases"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="red">"Cumulative Total Death"</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="red">"Daily New Death"</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Daily New Death"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"Daily New Cases"</font>}),<br></br>    #<font color="red">"Merged Queries"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Replaced Value1"</font>, {<font color="red">"Country"</font>}, #<font color="red">"Covid19 Summary"</font>, {<font color="red">"Country"</font>}, <font color="red">"Covid19 Summary"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"Expanded Covid19 Summary"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Merged Queries"</font>, <font color="red">"Covid19 Summary"</font>, {<font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, {<font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Expanded Covid19 Summary"</font>,{{<font color="red">"Daily New Cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Daily New Death"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Added Custom"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Changed Type1"</font>, <font color="red">"Cumulative Recovered"</font>, each [Cumulatives Total Case] - [Active Cases] - [Cumulative Total Death]),<br></br>    #<font color="red">"Changed Type2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Added Custom"</font>,{{<font color="red">"Cumulative Recovered"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type2"</font>,{{<font color="red">"Cumulative Recovered"</font>, <font color="red">"Cumulative Total Recovered"</font>}}),<br></br>    #<font color="red">"Unpivoted Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Renamed Columns1"</font>, {<font color="red">"<font color="blue">date</font>"</font>, <font color="red">"Country"</font>, <font color="red">"Country Json"</font>, <font color="red">"Continent"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Renamed Columns2"</font>,{<font color="red">"<font color="blue">date</font>"</font>, <font color="red">"Status"</font>, <font color="red">"Value"</font>}),<br></br>    #<font color="red">"Removed Duplicates"</font> = <font color="purple">Table.Distinct</font>(#<font color="red">"Removed Columns"</font>, {<font color="red">"Country"</font>}),<br></br>    #<font color="red">"Added Index"</font> = <font color="purple">Table.AddIndexColumn</font>(#<font color="red">"Removed Duplicates"</font>, <font color="red">"Index"</font>, 1, 1, <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Renamed Columns3"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Added Index"</font>,{{<font color="red">"Country Json"</font>, <font color="red">"Country."</font>}}),<br></br>    #<font color="red">"Merged Queries1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Renamed Columns3"</font>, {<font color="red">"Country"</font>}, #<font color="red">"ISO 2 Data"</font>, {<font color="red">"country"</font>}, <font color="red">"Sheet1"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"Expanded Sheet1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Merged Queries1"</font>, <font color="red">"Sheet1"</font>, {<font color="red">"cca2"</font>}, {<font color="red">"cca2"</font>}),<br></br>    #<font color="red">"Renamed Columns4"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Expanded Sheet1"</font>,{{<font color="red">"cca2"</font>, <font color="red">"ISO 2"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns4"</font></td></tr><tr ><td >CV19 Data-0978b11d-b26c-4727-8f15-cc1191396137</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\PP\My Power BI Project\worldometer_coronavirus_daily_data.csv"</font>),[Delimiter=<font color="red">","</font>, Columns=9, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Source, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"<font color="blue">date</font>"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"country"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"active_cases"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Cumulative Recovered"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Daily Recovered"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Changed Type"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"daily_new_cases"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,<font color="blue">null</font>,0,<font color="purple">Replacer.ReplaceValue</font>,{<font color="red">"daily_new_deaths"</font>}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Replaced Value1"</font>,{{<font color="red">"<font color="blue">date</font>"</font>, <font color="red">"Date"</font>}, {<font color="red">"country"</font>, <font color="red">"Country"</font>}, {<font color="red">"cumulative_total_cases"</font>, <font color="red">"Cumulative Confirmed"</font>}, {<font color="red">"daily_new_cases"</font>, <font color="red">"Daily Confirmed"</font>}, {<font color="red">"active_cases"</font>, <font color="red">"Active Cases"</font>}, {<font color="red">"cumulative_total_deaths"</font>, <font color="red">"Cumulative Total Deaths"</font>}, {<font color="red">"daily_new_deaths"</font>, <font color="red">"Daily Deaths"</font>}}),<br></br>    #<font color="red">"Unpivoted Other Columns"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Renamed Columns"</font>, {<font color="red">"Date"</font>, <font color="red">"Country"</font>}, <font color="red">"Attribute"</font>, <font color="red">"Value"</font>),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Unpivoted Other Columns"</font>,{{<font color="red">"Attribute"</font>, <font color="red">"Status"</font>}}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns1"</font>,{{<font color="red">"Value"</font>, <font color="purple">Int64.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type1"</font></td></tr></table><script>
	var toggler = document.getElementsByClassName("caret");
	for (var i = 0; i < toggler.length; i++){
		toggler[i].addEventListener("click", function() {
			this.parentElement.querySelector(".nested").classList.toggle("active");
		});
	}
		
	var togglerAll = document.getElementsByClassName("dropDownCaret");
	for (var j=0; j<togglerAll.length; j++){
		togglerAll[j].addEventListener("click", function(event){
			if (event.currentTarget != event.target) return;
			if(this.parentElement.querySelector(".nested").classList.contains("active")){
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(currentValue.classList.contains("active")){
						currentValue.classList.remove("active");
					}
				});
			}
			else{
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(!currentValue.classList.contains("active")){
						currentValue.classList.add("active");
					}
				});
			}
		});
	}
</script></body></html>